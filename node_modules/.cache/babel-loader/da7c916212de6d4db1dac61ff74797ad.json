{"ast":null,"code":"import { FILL_POST, START_LOADING, STOP_LOADING, SET_ERROR } from \"./types\";\nimport { signIn, createUser, signOut } from \"../../api/auth\"; // Sync\n\nexport const fillPostSync = data => {\n  return {\n    type: FILL_POST,\n    payload: data\n  };\n};\nexport const startLoading = {\n  type: START_LOADING\n};\nexport const stopLoading = {\n  type: STOP_LOADING\n};\nexport const setErrorMessage = msg => ({\n  type: SET_ERROR,\n  payload: msg\n}); // Async\n\nexport const fetchPost = params => dispatch => {\n  dispatch(startLoading);\n  fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(data => dispatch(fillPostSync(data))).catch(error => setErrorMessage(error)).finally(() => dispatch(stopLoading));\n};\nconst credentials = {\n  name: \"Jecskф\",\n  email: \"jectsф@gmail.com\",\n  password: \"jecфt#s$$\",\n  permissions: \"custom\"\n};\nexport const signUserInAsync = () => dispatch => {\n  signIn({\n    email: \"jectsф@gmail.com\",\n    password: \"jecфt#s$$\"\n  }).then(response => {\n    console.log(\"response\", response);\n  }).catch(error => console.log(\"error\", error));\n};\nexport const createUserAsync = () => dispatch => {\n  createUser(credentials).then(response => {\n    console.log(\"response\", response);\n  }).catch(error => console.log(\"error\", error));\n};\nexport const signUserOut = () => dispatch => {\n  return signOut().then(() => {\n    console.log(\"delete from LS\");\n  });\n};","map":{"version":3,"sources":["/Users/nataliasabadysh/Desktop/ReactLessons/lesson3/src/redux/posts/actions.js"],"names":["FILL_POST","START_LOADING","STOP_LOADING","SET_ERROR","signIn","createUser","signOut","fillPostSync","data","type","payload","startLoading","stopLoading","setErrorMessage","msg","fetchPost","params","dispatch","fetch","then","response","json","catch","error","finally","credentials","name","email","password","permissions","signUserInAsync","console","log","createUserAsync","signUserOut"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,aAApB,EAAmCC,YAAnC,EAAiDC,SAAjD,QAAkE,SAAlE;AAEA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,OAA7B,QAA4C,gBAA5C,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAET,SADD;AAELU,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,YAAY,GAAG;AAC1BF,EAAAA,IAAI,EAAER;AADoB,CAArB;AAIP,OAAO,MAAMW,WAAW,GAAG;AACzBH,EAAAA,IAAI,EAAEP;AADmB,CAApB;AAIP,OAAO,MAAMW,eAAe,GAAIC,GAAD,KAAU;AACvCL,EAAAA,IAAI,EAAEN,SADiC;AAEvCO,EAAAA,OAAO,EAAEI;AAF8B,CAAV,CAAxB,C,CAKP;;AACA,OAAO,MAAMC,SAAS,GAAIC,MAAD,IAAaC,QAAD,IAAc;AACjDA,EAAAA,QAAQ,CAACN,YAAD,CAAR;AACAO,EAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESX,IAAD,IAAUS,QAAQ,CAACV,YAAY,CAACC,IAAD,CAAb,CAF1B,EAGGc,KAHH,CAGUC,KAAD,IAAWV,eAAe,CAACU,KAAD,CAHnC,EAIGC,OAJH,CAIW,MAAMP,QAAQ,CAACL,WAAD,CAJzB;AAKD,CAPM;AASP,MAAMa,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAE,QADY;AAElBC,EAAAA,KAAK,EAAE,kBAFW;AAGlBC,EAAAA,QAAQ,EAAE,WAHQ;AAIlBC,EAAAA,WAAW,EAAE;AAJK,CAApB;AAOA,OAAO,MAAMC,eAAe,GAAG,MAAOb,QAAD,IAAc;AACjDb,EAAAA,MAAM,CAAC;AAAEuB,IAAAA,KAAK,EAAE,kBAAT;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GAAD,CAAN,CACGT,IADH,CACSC,QAAD,IAAc;AAClBW,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBZ,QAAxB;AACD,GAHH,EAIGE,KAJH,CAIUC,KAAD,IAAWQ,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBT,KAArB,CAJpB;AAKD,CANM;AAQP,OAAO,MAAMU,eAAe,GAAG,MAAOhB,QAAD,IAAc;AACjDZ,EAAAA,UAAU,CAACoB,WAAD,CAAV,CACGN,IADH,CACSC,QAAD,IAAc;AAClBW,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBZ,QAAxB;AACD,GAHH,EAIGE,KAJH,CAIUC,KAAD,IAAWQ,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBT,KAArB,CAJpB;AAKD,CANM;AAQP,OAAO,MAAMW,WAAW,GAAG,MAAOjB,QAAD,IAAc;AAC7C,SAAOX,OAAO,GAAGa,IAAV,CAAe,MAAM;AAC1BY,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,GAFM,CAAP;AAGD,CAJM","sourcesContent":["import { FILL_POST, START_LOADING, STOP_LOADING, SET_ERROR } from \"./types\";\n\nimport { signIn, createUser, signOut } from \"../../api/auth\";\n\n// Sync\nexport const fillPostSync = (data) => {\n  return {\n    type: FILL_POST,\n    payload: data,\n  };\n};\n\nexport const startLoading = {\n  type: START_LOADING,\n};\n\nexport const stopLoading = {\n  type: STOP_LOADING,\n};\n\nexport const setErrorMessage = (msg) => ({\n  type: SET_ERROR,\n  payload: msg,\n});\n\n// Async\nexport const fetchPost = (params) => (dispatch) => {\n  dispatch(startLoading);\n  fetch(\"https://jsonplaceholder.typicode.com/posts\")\n    .then((response) => response.json())\n    .then((data) => dispatch(fillPostSync(data)))\n    .catch((error) => setErrorMessage(error))\n    .finally(() => dispatch(stopLoading));\n};\n\nconst credentials = {\n  name: \"Jecskф\",\n  email: \"jectsф@gmail.com\",\n  password: \"jecфt#s$$\",\n  permissions: \"custom\",\n};\n\nexport const signUserInAsync = () => (dispatch) => {\n  signIn({ email: \"jectsф@gmail.com\", password: \"jecфt#s$$\" })\n    .then((response) => {\n      console.log(\"response\", response);\n    })\n    .catch((error) => console.log(\"error\", error));\n};\n\nexport const createUserAsync = () => (dispatch) => {\n  createUser(credentials)\n    .then((response) => {\n      console.log(\"response\", response);\n    })\n    .catch((error) => console.log(\"error\", error));\n};\n\nexport const signUserOut = () => (dispatch) => {\n  return signOut().then(() => {\n    console.log(\"delete from LS\");\n  });\n};\n"]},"metadata":{},"sourceType":"module"}