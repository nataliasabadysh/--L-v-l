{"ast":null,"code":"import{FILL_POST,START_LOADING,STOP_LOADING,SET_ERROR}from\"./types\";import{signIn,createUser,signOut}from\"../../api/auth\";// Sync\nexport var fillPostSync=function fillPostSync(data){return{type:FILL_POST,payload:data};};export var startLoading={type:START_LOADING};export var stopLoading={type:STOP_LOADING};export var setErrorMessage=function setErrorMessage(msg){return{type:SET_ERROR,payload:msg};};// Async\nexport var fetchPost=function fetchPost(params){return function(dispatch){dispatch(startLoading);fetch(\"https://jsonplaceholder.typicode.com/posts\").then(function(response){return response.json();}).then(function(data){return dispatch(fillPostSync(data));}).catch(function(error){return setErrorMessage(error);}).finally(function(){return dispatch(stopLoading);});};};var credentials={name:\"Jecskф\",email:\"jectsф@gmail.com\",password:\"jecфt#s$$\",permissions:\"custom\"};export var signUserInAsync=function signUserInAsync(){return function(dispatch){signIn({email:\"jectsф@gmail.com\",password:\"jecфt#s$$\"}).then(function(response){console.log(\"response\",response);}).catch(function(error){return console.log(\"error\",error);});};};export var createUserAsync=function createUserAsync(){return function(dispatch){createUser(credentials).then(function(response){console.log(\"response\",response);}).catch(function(error){return console.log(\"error\",error);});};};export var signUserOut=function signUserOut(){return function(dispatch){return signOut().then(function(){console.log(\"delete from LS\");});};};","map":{"version":3,"sources":["/Users/nataliasabadysh/Desktop/ReactLessons/lesson3/src/redux/posts/actions.js"],"names":["FILL_POST","START_LOADING","STOP_LOADING","SET_ERROR","signIn","createUser","signOut","fillPostSync","data","type","payload","startLoading","stopLoading","setErrorMessage","msg","fetchPost","params","dispatch","fetch","then","response","json","catch","error","finally","credentials","name","email","password","permissions","signUserInAsync","console","log","createUserAsync","signUserOut"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,aAApB,CAAmCC,YAAnC,CAAiDC,SAAjD,KAAkE,SAAlE,CAEA,OAASC,MAAT,CAAiBC,UAAjB,CAA6BC,OAA7B,KAA4C,gBAA5C,CAEA;AACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAU,CACpC,MAAO,CACLC,IAAI,CAAET,SADD,CAELU,OAAO,CAAEF,IAFJ,CAAP,CAID,CALM,CAOP,MAAO,IAAMG,CAAAA,YAAY,CAAG,CAC1BF,IAAI,CAAER,aADoB,CAArB,CAIP,MAAO,IAAMW,CAAAA,WAAW,CAAG,CACzBH,IAAI,CAAEP,YADmB,CAApB,CAIP,MAAO,IAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,GAAD,QAAU,CACvCL,IAAI,CAAEN,SADiC,CAEvCO,OAAO,CAAEI,GAF8B,CAAV,EAAxB,CAKP;AACA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,QAAY,UAACC,QAAD,CAAc,CACjDA,QAAQ,CAACN,YAAD,CAAR,CACAO,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQ,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EADR,EAEGF,IAFH,CAEQ,SAACX,IAAD,QAAUS,CAAAA,QAAQ,CAACV,YAAY,CAACC,IAAD,CAAb,CAAlB,EAFR,EAGGc,KAHH,CAGS,SAACC,KAAD,QAAWV,CAAAA,eAAe,CAACU,KAAD,CAA1B,EAHT,EAIGC,OAJH,CAIW,iBAAMP,CAAAA,QAAQ,CAACL,WAAD,CAAd,EAJX,EAKD,CAPwB,EAAlB,CASP,GAAMa,CAAAA,WAAW,CAAG,CAClBC,IAAI,CAAE,QADY,CAElBC,KAAK,CAAE,kBAFW,CAGlBC,QAAQ,CAAE,WAHQ,CAIlBC,WAAW,CAAE,QAJK,CAApB,CAOA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,SAAM,UAACb,QAAD,CAAc,CACjDb,MAAM,CAAC,CAAEuB,KAAK,CAAE,kBAAT,CAA6BC,QAAQ,CAAE,WAAvC,CAAD,CAAN,CACGT,IADH,CACQ,SAACC,QAAD,CAAc,CAClBW,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBZ,QAAxB,EACD,CAHH,EAIGE,KAJH,CAIS,SAACC,KAAD,QAAWQ,CAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBT,KAArB,CAAX,EAJT,EAKD,CAN8B,EAAxB,CAQP,MAAO,IAAMU,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,SAAM,UAAChB,QAAD,CAAc,CACjDZ,UAAU,CAACoB,WAAD,CAAV,CACGN,IADH,CACQ,SAACC,QAAD,CAAc,CAClBW,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBZ,QAAxB,EACD,CAHH,EAIGE,KAJH,CAIS,SAACC,KAAD,QAAWQ,CAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBT,KAArB,CAAX,EAJT,EAKD,CAN8B,EAAxB,CAQP,MAAO,IAAMW,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAM,UAACjB,QAAD,CAAc,CAC7C,MAAOX,CAAAA,OAAO,GAAGa,IAAV,CAAe,UAAM,CAC1BY,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACD,CAFM,CAAP,CAGD,CAJ0B,EAApB","sourcesContent":["import { FILL_POST, START_LOADING, STOP_LOADING, SET_ERROR } from \"./types\";\n\nimport { signIn, createUser, signOut } from \"../../api/auth\";\n\n// Sync\nexport const fillPostSync = (data) => {\n  return {\n    type: FILL_POST,\n    payload: data,\n  };\n};\n\nexport const startLoading = {\n  type: START_LOADING,\n};\n\nexport const stopLoading = {\n  type: STOP_LOADING,\n};\n\nexport const setErrorMessage = (msg) => ({\n  type: SET_ERROR,\n  payload: msg,\n});\n\n// Async\nexport const fetchPost = (params) => (dispatch) => {\n  dispatch(startLoading);\n  fetch(\"https://jsonplaceholder.typicode.com/posts\")\n    .then((response) => response.json())\n    .then((data) => dispatch(fillPostSync(data)))\n    .catch((error) => setErrorMessage(error))\n    .finally(() => dispatch(stopLoading));\n};\n\nconst credentials = {\n  name: \"Jecskф\",\n  email: \"jectsф@gmail.com\",\n  password: \"jecфt#s$$\",\n  permissions: \"custom\",\n};\n\nexport const signUserInAsync = () => (dispatch) => {\n  signIn({ email: \"jectsф@gmail.com\", password: \"jecфt#s$$\" })\n    .then((response) => {\n      console.log(\"response\", response);\n    })\n    .catch((error) => console.log(\"error\", error));\n};\n\nexport const createUserAsync = () => (dispatch) => {\n  createUser(credentials)\n    .then((response) => {\n      console.log(\"response\", response);\n    })\n    .catch((error) => console.log(\"error\", error));\n};\n\nexport const signUserOut = () => (dispatch) => {\n  return signOut().then(() => {\n    console.log(\"delete from LS\");\n  });\n};\n"]},"metadata":{},"sourceType":"module"}