{"ast":null,"code":"import { createUser, signIn, signOut } from \"../../api/auth\";\nimport { types } from \"./type\"; // SYNC\n\nconst singUpUserRequest = {\n  type: types.USER_REQUEST\n};\nexport const singUpUserSuccess = {\n  type: types.USER_SUCCESS\n};\nexport const logOutUser = {\n  type: types.LOG_OUT\n};\nexport const singUpUser = user => ({\n  type: types.SIGN_UP,\n  payload: user\n});\n\nconst logInUserResponse = response => ({\n  type: types.LOG_IN,\n  payload: response\n});\n\nconst singUpUserError = message => ({\n  type: types.SIGN_UP_ERROR,\n  payload: message\n});\n\nconst logInUserError = message => ({\n  type: types.LOG_IN_ERROR,\n  payload: message\n}); // ASYNC  - fun (side effect)\n\n\nexport const createUserAsync = credentials => dispatch => {\n  dispatch(singUpUserRequest);\n  createUser(credentials).then(response => {\n    dispatch(singUpUser(response));\n    dispatch(singUpUserSuccess);\n    localStorage.setItem(\"auth\", JSON.stringify(response));\n  }).catch(error => dispatch(singUpUserError(error))); // fetch('https:/uperSite.api/singup').then()\n};\nexport const logInUserAsync = credentials => dispatch => {\n  dispatch(singUpUserRequest);\n  signIn(credentials).then(response => {\n    dispatch(logInUserResponse(response));\n    dispatch(singUpUserSuccess);\n    localStorage.setItem(\"auth\", JSON.stringify(response));\n  }).catch(error => dispatch(logInUserError(error))); // fetch('https:/uperSite.api/singup').then()\n};\nexport const logOutUserAsync = () => dispatch => {\n  signOut();\n  dispatch(logOutUser);\n};","map":{"version":3,"sources":["/Users/nataliasabadysh/Desktop/ReactLessons/lesson3/src/redux/auth/actions.js"],"names":["createUser","signIn","signOut","types","singUpUserRequest","type","USER_REQUEST","singUpUserSuccess","USER_SUCCESS","logOutUser","LOG_OUT","singUpUser","user","SIGN_UP","payload","logInUserResponse","response","LOG_IN","singUpUserError","message","SIGN_UP_ERROR","logInUserError","LOG_IN_ERROR","createUserAsync","credentials","dispatch","then","localStorage","setItem","JSON","stringify","catch","error","logInUserAsync","logOutUserAsync"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,OAA7B,QAA4C,gBAA5C;AACA,SAASC,KAAT,QAAsB,QAAtB,C,CAEA;;AACA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,IAAI,EAAEF,KAAK,CAACG;AADY,CAA1B;AAIA,OAAO,MAAMC,iBAAiB,GAAG;AAC/BF,EAAAA,IAAI,EAAEF,KAAK,CAACK;AADmB,CAA1B;AAIP,OAAO,MAAMC,UAAU,GAAG;AACxBJ,EAAAA,IAAI,EAAEF,KAAK,CAACO;AADY,CAAnB;AAIP,OAAO,MAAMC,UAAU,GAAIC,IAAD,KAAW;AACnCP,EAAAA,IAAI,EAAEF,KAAK,CAACU,OADuB;AAEnCC,EAAAA,OAAO,EAAEF;AAF0B,CAAX,CAAnB;;AAKP,MAAMG,iBAAiB,GAAIC,QAAD,KAAe;AACvCX,EAAAA,IAAI,EAAEF,KAAK,CAACc,MAD2B;AAEvCH,EAAAA,OAAO,EAAEE;AAF8B,CAAf,CAA1B;;AAKA,MAAME,eAAe,GAAIC,OAAD,KAAc;AACpCd,EAAAA,IAAI,EAAEF,KAAK,CAACiB,aADwB;AAEpCN,EAAAA,OAAO,EAAEK;AAF2B,CAAd,CAAxB;;AAKA,MAAME,cAAc,GAAIF,OAAD,KAAc;AACnCd,EAAAA,IAAI,EAAEF,KAAK,CAACmB,YADuB;AAEnCR,EAAAA,OAAO,EAAEK;AAF0B,CAAd,CAAvB,C,CAKA;;;AACA,OAAO,MAAMI,eAAe,GAAIC,WAAD,IAAkBC,QAAD,IAAc;AAC5DA,EAAAA,QAAQ,CAACrB,iBAAD,CAAR;AACAJ,EAAAA,UAAU,CAACwB,WAAD,CAAV,CACGE,IADH,CACSV,QAAD,IAAc;AAClBS,IAAAA,QAAQ,CAACd,UAAU,CAACK,QAAD,CAAX,CAAR;AACAS,IAAAA,QAAQ,CAAClB,iBAAD,CAAR;AAEAoB,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAed,QAAf,CAA7B;AACD,GANH,EAOGe,KAPH,CAOUC,KAAD,IAAWP,QAAQ,CAACP,eAAe,CAACc,KAAD,CAAhB,CAP5B,EAF4D,CAW5D;AACD,CAZM;AAcP,OAAO,MAAMC,cAAc,GAAIT,WAAD,IAAkBC,QAAD,IAAc;AAC3DA,EAAAA,QAAQ,CAACrB,iBAAD,CAAR;AAEAH,EAAAA,MAAM,CAACuB,WAAD,CAAN,CACGE,IADH,CACSV,QAAD,IAAc;AAClBS,IAAAA,QAAQ,CAACV,iBAAiB,CAACC,QAAD,CAAlB,CAAR;AACAS,IAAAA,QAAQ,CAAClB,iBAAD,CAAR;AACAoB,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAed,QAAf,CAA7B;AACD,GALH,EAMGe,KANH,CAMUC,KAAD,IAAWP,QAAQ,CAACJ,cAAc,CAACW,KAAD,CAAf,CAN5B,EAH2D,CAW3D;AACD,CAZM;AAcP,OAAO,MAAME,eAAe,GAAG,MAAOT,QAAD,IAAc;AACjDvB,EAAAA,OAAO;AACPuB,EAAAA,QAAQ,CAAChB,UAAD,CAAR;AACD,CAHM","sourcesContent":["import { createUser, signIn, signOut } from \"../../api/auth\";\nimport { types } from \"./type\";\n\n// SYNC\nconst singUpUserRequest = {\n  type: types.USER_REQUEST,\n};\n\nexport const singUpUserSuccess = {\n  type: types.USER_SUCCESS,\n};\n\nexport const logOutUser = {\n  type: types.LOG_OUT,\n};\n\nexport const singUpUser = (user) => ({\n  type: types.SIGN_UP,\n  payload: user,\n});\n\nconst logInUserResponse = (response) => ({\n  type: types.LOG_IN,\n  payload: response,\n});\n\nconst singUpUserError = (message) => ({\n  type: types.SIGN_UP_ERROR,\n  payload: message,\n});\n\nconst logInUserError = (message) => ({\n  type: types.LOG_IN_ERROR,\n  payload: message,\n});\n\n// ASYNC  - fun (side effect)\nexport const createUserAsync = (credentials) => (dispatch) => {\n  dispatch(singUpUserRequest);\n  createUser(credentials)\n    .then((response) => {\n      dispatch(singUpUser(response));\n      dispatch(singUpUserSuccess);\n\n      localStorage.setItem(\"auth\", JSON.stringify(response));\n    })\n    .catch((error) => dispatch(singUpUserError(error)));\n\n  // fetch('https:/uperSite.api/singup').then()\n};\n\nexport const logInUserAsync = (credentials) => (dispatch) => {\n  dispatch(singUpUserRequest);\n\n  signIn(credentials)\n    .then((response) => {\n      dispatch(logInUserResponse(response));\n      dispatch(singUpUserSuccess);\n      localStorage.setItem(\"auth\", JSON.stringify(response));\n    })\n    .catch((error) => dispatch(logInUserError(error)));\n\n  // fetch('https:/uperSite.api/singup').then()\n};\n\nexport const logOutUserAsync = () => (dispatch) => {\n  signOut();\n  dispatch(logOutUser);\n};\n"]},"metadata":{},"sourceType":"module"}