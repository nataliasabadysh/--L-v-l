{"ast":null,"code":"var _jsxFileName = \"/Users/nataliasabadysh/Desktop/ReactLessons/lesson3/src/examples/formik/example3.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst delay = ms => new Promise(r => setTimeout(r, ms)); // const validationSchema = yup.object({\n//   email: yup\n//     .string(\"Enter your email\")\n//     .email(\"Enter a valid email\")\n//     .required(\"Email is required\"),\n//   password: yup\n//     .string(\"Enter your password\")\n//     .min(8, \"Password should be of minimum 8 characters length\")\n//     .required(\"Password is required\"),\n// });\n\n\nexport const WithMaterialFormik = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      password: '',\n      email: ''\n    },\n    validationSchema: Yup.object({\n      password: Yup.string().min(8, \"Password should be of minimum 8 characters length\").max(20, 'Must be 20 characters or less').required('Required'),\n      email: Yup.string().email('Invalid email address').required('Required')\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  }); // console.log('formik', formik)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 500,\n      margin: '0 auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"email\",\n        name: \"email\",\n        label: \"Email\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        error: formik.touched.email && Boolean(formik.errors.email),\n        helperText: formik.touched.email && formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"password\",\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        value: formik.values.password,\n        onChange: formik.handleChange,\n        error: formik.touched.password && Boolean(formik.errors.password),\n        helperText: formik.touched.password && formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        disabled: formik.isSubmitting,\n        variant: \"contained\",\n        fullWidth: true,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WithMaterialFormik, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = WithMaterialFormik;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithMaterialFormik\");","map":{"version":3,"sources":["/Users/nataliasabadysh/Desktop/ReactLessons/lesson3/src/examples/formik/example3.js"],"names":["React","useFormik","Yup","Button","TextField","delay","ms","Promise","r","setTimeout","WithMaterialFormik","formik","initialValues","password","email","validationSchema","object","string","min","max","required","onSubmit","values","alert","JSON","stringify","width","margin","handleSubmit","handleChange","touched","Boolean","errors","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst delay = (ms) => new Promise((r) => setTimeout(r, ms));\n\n// const validationSchema = yup.object({\n//   email: yup\n//     .string(\"Enter your email\")\n//     .email(\"Enter a valid email\")\n//     .required(\"Email is required\"),\n//   password: yup\n//     .string(\"Enter your password\")\n//     .min(8, \"Password should be of minimum 8 characters length\")\n//     .required(\"Password is required\"),\n// });\n\nexport const WithMaterialFormik = () => {\n\n  const formik = useFormik({\n    initialValues: {\n      password: '',\n      email: '',\n    },\n    validationSchema: Yup.object({\n\n      password: Yup.string()\n        .min(8, \"Password should be of minimum 8 characters length\")\n        .max(20, 'Must be 20 characters or less')\n        .required('Required'),\n      email: Yup.string().email('Invalid email address').required('Required'),\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  // console.log('formik', formik)\n\n\n  return (\n    <div style={{ width: 500, margin: '0 auto'}}>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button\n          color=\"primary\"\n          disabled={formik.isSubmitting}\n          variant=\"contained\"\n          fullWidth\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}