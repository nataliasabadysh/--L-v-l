{"ast":null,"code":"var _jsxFileName = \"/Users/nataliasabadysh/Desktop/ReactLessons/lesson3/src/App.js\",\n    _s = $RefreshSig$();\n\n// Core\nimport React, { useState, useEffect } from \"react\"; // Context\n\nimport { ThemeProvider } from \"./context/theme\"; // Components\n\nimport { Searchbar } from \"./components/Searchbar\";\nimport { ImageGallery } from \"./components/ImageGallery\"; // import { SelectCategory } from \"./components/SelectCategory\";\n// import { Button } from \"./common/Button\";\n\nimport { Pagination } from \"./common/Pagination\";\nimport { Layout } from \"./common/Layout\";\nimport { useFetch } from \"./hook/useFetch\";\nimport { Modal } from \"./common/Modal\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  // Example with Custom Hook\n  const {\n    data,\n    loader,\n    _fetchWithParams\n  } = useFetch();\n  const [selected, setSlected] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [queryValue, setQueryValue] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  const onSelectImage = params => {\n    setSlected(params);\n    setIsModalOpen(true);\n  }; // console.log('history', history)\n\n\n  useEffect(() => {\n    if (page && queryValue) {\n      _fetchWithParams(queryValue, page);\n    }\n  }, [page, queryValue, _fetchWithParams]);\n\n  const closeModel = () => setIsModalOpen(false);\n\n  const onChangePage = preperty => setPage(preperty);\n\n  const onSendQuery = property => setQueryValue(property);\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [selected.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"Modal\"\n      }, void 0, false), /*#__PURE__*/_jsxDEV(Searchbar, {\n        onSendQuery: onSendQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), !loader && data && /*#__PURE__*/_jsxDEV(ImageGallery, {\n        response: data,\n        onSelectImage: onSelectImage,\n        history: props.history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        pages: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n        onChangePage: onChangePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), loader && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading .. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 20\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n        closeModal: closeModel,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"350\",\n          src: selected,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7Ck8BS5G/iC2Ec9N1BoSBYEwtyA=\", false, function () {\n  return [useFetch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nataliasabadysh/Desktop/ReactLessons/lesson3/src/App.js"],"names":["React","useState","useEffect","ThemeProvider","Searchbar","ImageGallery","Pagination","Layout","useFetch","Modal","App","props","data","loader","_fetchWithParams","selected","setSlected","isModalOpen","setIsModalOpen","queryValue","setQueryValue","page","setPage","onSelectImage","params","closeModel","onChangePage","preperty","onSendQuery","property","length","history"],"mappings":"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","sourcesContent":["// Core\nimport React, { useState, useEffect } from \"react\";\n// Context\nimport { ThemeProvider } from \"./context/theme\";\n\n// Components\nimport { Searchbar } from \"./components/Searchbar\";\nimport { ImageGallery } from \"./components/ImageGallery\";\n// import { SelectCategory } from \"./components/SelectCategory\";\n// import { Button } from \"./common/Button\";\nimport { Pagination } from \"./common/Pagination\";\nimport { Layout } from \"./common/Layout\";\nimport { useFetch } from \"./hook/useFetch\";\nimport { Modal } from \"./common/Modal\";\n\nfunction App(props) {\n  // Example with Custom Hook\n  const { data, loader, _fetchWithParams } = useFetch();\n\n  const [selected, setSlected] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [queryValue, setQueryValue] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  const onSelectImage = (params) => {\n    setSlected(params);\n    setIsModalOpen(true);\n  };\n\n  // console.log('history', history)\n  useEffect(() => {\n    if (page && queryValue) {\n      _fetchWithParams(queryValue, page);\n    }\n  }, [page, queryValue, _fetchWithParams]);\n\n  const closeModel = () => setIsModalOpen(false);\n\n  const onChangePage = (preperty) => setPage(preperty);\n  const onSendQuery = (property) => setQueryValue(property);\n\n\n  return (\n    <ThemeProvider>\n      <Layout>\n        {selected.length > 0 && <>Modal</>}\n        <Searchbar onSendQuery={onSendQuery} />\n\n        {!loader && data && (\n          <ImageGallery response={data} onSelectImage={onSelectImage} history={props.history}/>\n        )}\n        <Pagination\n          pages={[1, 2, 3, 4, 5, 6, 7, 8, 9]}\n          onChangePage={onChangePage}\n        />\n\n        {loader && <h1>Loading .. </h1>}\n        {isModalOpen && (\n          <Modal closeModal={closeModel}>\n            <img width=\"350\" src={selected} alt=\"\" />\n          </Modal>\n        )}\n      </Layout>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}