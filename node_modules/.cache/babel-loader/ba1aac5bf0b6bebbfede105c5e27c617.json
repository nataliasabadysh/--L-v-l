{"ast":null,"code":"var _jsxFileName = \"/Users/nataliasabadysh/Desktop/ReactLessons/lesson3/src/component/PostList/PostList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { getPosts, getLoadingPost } from \"../../redux/posts/selector\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { PostItem } from \"../PostItem/PostItem\";\nimport Grid from \"@mui/material/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostList = () => {\n  _s();\n\n  const posts = useSelector(globalStage => getPosts(globalStage));\n  const isLoadingState = useSelector(globalStage => getLoadingPost(globalStage));\n  const listJSX = !isLoadingState && posts.length > 1 && posts.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 2,\n    sm: 4,\n    md: 4,\n    children: /*#__PURE__*/_jsxDEV(PostItem, {\n      name: item.body\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this));\n\n  const loaderJSX = isLoadingState && posts.length < 1 && /*#__PURE__*/_jsxDEV(ClipLoader, {\n    color: \"red\",\n    size: 150\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: {\n      xs: 2,\n      md: 3\n    },\n    columns: {\n      xs: 4,\n      sm: 8,\n      md: 12\n    },\n    children: [loaderJSX, listJSX]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostList, \"0ohP0es5DWGGVb9fOCJvNL2Tvgk=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/nataliasabadysh/Desktop/ReactLessons/lesson3/src/component/PostList/PostList.js"],"names":["useSelector","getPosts","getLoadingPost","ClipLoader","PostItem","Grid","PostList","posts","globalStage","isLoadingState","listJSX","length","map","item","body","id","loaderJSX","xs","md","sm"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,4BAAzC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAMC,KAAK,GAAGP,WAAW,CAAEQ,WAAD,IAAiBP,QAAQ,CAACO,WAAD,CAA1B,CAAzB;AACA,QAAMC,cAAc,GAAGT,WAAW,CAAEQ,WAAD,IACjCN,cAAc,CAACM,WAAD,CADkB,CAAlC;AAIA,QAAME,OAAO,GACX,CAACD,cAAD,IACAF,KAAK,CAACI,MAAN,GAAe,CADf,IAEAJ,KAAK,CAACK,GAAN,CAAWC,IAAD,iBACR,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAyB,IAAA,EAAE,EAAE,CAA7B;AAAA,2BACE,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA,IAAI,CAACC;AAAnC,OAAeD,IAAI,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA;AADF,KAAqCF,IAAI,CAACE,EAA1C;AAAA;AAAA;AAAA;AAAA,UADF,CAHF;;AASA,QAAMC,SAAS,GAAGP,cAAc,IAAIF,KAAK,CAACI,MAAN,GAAe,CAAjC,iBAChB,QAAC,UAAD;AAAY,IAAA,KAAK,EAAE,KAAnB;AAA0B,IAAA,IAAI,EAAE;AAAhC;AAAA;AAAA;AAAA;AAAA,UADF;;AAIA,sBACE,QAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAE;AAAEM,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,EAAE,EAAE;AAAb,KAFX;AAGE,IAAA,OAAO,EAAE;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASE,MAAAA,EAAE,EAAE,CAAb;AAAgBD,MAAAA,EAAE,EAAE;AAApB,KAHX;AAAA,eAKGF,SALH,EAMGN,OANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA7BM;;GAAMJ,Q;UACGN,W,EACSA,W;;;KAFZM,Q","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { getPosts, getLoadingPost } from \"../../redux/posts/selector\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { PostItem } from \"../PostItem/PostItem\";\nimport Grid from \"@mui/material/Grid\";\n\nexport const PostList = () => {\n  const posts = useSelector((globalStage) => getPosts(globalStage));\n  const isLoadingState = useSelector((globalStage) =>\n    getLoadingPost(globalStage)\n  );\n\n  const listJSX =\n    !isLoadingState &&\n    posts.length > 1 &&\n    posts.map((item) => (\n      <Grid item xs={2} sm={4} md={4} key={item.id}>\n        <PostItem key={item.id} name={item.body} />\n      </Grid>\n    ));\n\n  const loaderJSX = isLoadingState && posts.length < 1 && (\n    <ClipLoader color={\"red\"} size={150} />\n  );\n\n  return (\n    <Grid\n      container\n      spacing={{ xs: 2, md: 3 }}\n      columns={{ xs: 4, sm: 8, md: 12 }}\n    >\n      {loaderJSX}\n      {listJSX}\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}