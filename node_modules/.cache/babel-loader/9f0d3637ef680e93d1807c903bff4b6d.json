{"ast":null,"code":"var _jsxFileName = \"/Users/nataliasabadysh/Desktop/ReactLessons/lesson3/src/components/NoteList/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { uuid } from 'uuidv4';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { Button } from '@mui/material';\nimport { NoteItem } from '../NoteItem';\nimport storage from '../utils/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NoteList = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [value, setValue] = useState('');\n\n  const handleChange = e => setValue(e.target.value);\n\n  const onSave = () => {\n    const data = {\n      name: value,\n      id: uuid(),\n      completed: false\n    };\n    setList(prevState => {\n      const prev = prevState ? prevState : {};\n      return [...prev, data];\n    });\n    setValue('');\n  }; // const notesData = storage.get(\"notes\");\n  // const notesData = storage.save(\"notes\", notes);\n\n\n  useEffect(() => {\n    const listData = storage.get(\"list\");\n\n    if (notes) {\n      setList(listData);\n    }\n  }, []);\n  useEffect(() => {\n    if (list) {\n      storage.save(\"list\", list);\n    }\n  }, [list]);\n\n  const onDelete = id => {\n    const newLis = list.filter(item => item.id !== id); // new Array without \"id\" - item  \n\n    setList(newLis);\n  };\n\n  const onUpdate = (id, text) => {\n    const newLis = list.map(item => item.id === id ? { ...item,\n      name: text\n    } : item);\n    setList(newLis);\n  };\n\n  const onCompleted = (id, completed) => {\n    const newLis = list.map(item => item.id === id ? { ...item,\n      completed: !completed\n    } : item);\n    setList(newLis);\n  };\n\n  const [filter, setFilter] = useState(''); // SEARCH  'c'\n\n  const handleChangeFilter = e => setFilter(e.target.value);\n\n  const visibleList = list.filter(item => item.name.includes(filter));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 700,\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Search your note\",\n      variant: \"outlined\",\n      value: filter,\n      onChange: handleChangeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: 50\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Name of the note\",\n          variant: \"outlined\",\n          value: value,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: value.length < 1,\n          fullWidth: true,\n          variant: \"contained\",\n          onClick: onSave,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), visibleList && visibleList.map(item => /*#__PURE__*/_jsxDEV(NoteItem, {\n      id: item.id,\n      name: item.name,\n      completed: item.completed,\n      onCompleted: onCompleted,\n      onDelete: onDelete,\n      onUpdate: onUpdate\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 52\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NoteList, \"S69yWz69xdh0O+IyFox/Canuhrw=\");\n\n_c = NoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"sources":["/Users/nataliasabadysh/Desktop/ReactLessons/lesson3/src/components/NoteList/index.js"],"names":["useState","uuid","Box","TextField","Button","NoteItem","storage","NoteList","list","setList","value","setValue","handleChange","e","target","onSave","data","name","id","completed","prevState","prev","useEffect","listData","get","notes","save","onDelete","newLis","filter","item","onUpdate","text","map","onCompleted","setFilter","handleChangeFilter","visibleList","includes","width","margin","paddingTop","length"],"mappings":"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","sourcesContent":["\nimport { useState } from 'react';\nimport { uuid } from 'uuidv4';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { Button } from '@mui/material';\nimport { NoteItem } from '../NoteItem';\nimport storage from '../utils/storage';\n\n\n\nexport const NoteList = () => {\n    const [list, setList] = useState([]);\n\n    const [value, setValue] = useState('');\n    const handleChange = (e)=> setValue(e.target.value);\n\n    const onSave = () => {\n        const data = { \n            name: value, \n            id: uuid(), \n            completed: false \n        }\n\n        setList((prevState)=>{\n            const prev = prevState ? prevState : {};\n            return [...prev, data]\n        });\n        setValue('')\n    }\n\n\n    // const notesData = storage.get(\"notes\");\n    // const notesData = storage.save(\"notes\", notes);\n\n    useEffect(() => {\n        const listData = storage.get(\"list\");\n\n        if(notes){\n            setList(listData)\n        }\n       \n    }, [])\n\n\n    useEffect(() => {\n        if(list){\n            storage.save(\"list\", list);\n        }\n    }, [list])\n\n\n    const onDelete = (id) => {\n        const newLis =  list.filter(item => item.id !== id) // new Array without \"id\" - item  \n        setList(newLis);\n    }\n\n    const onUpdate = (id, text) => {\n        const newLis =  list.map(item => item.id === id ? { ...item, name: text }: item );\n        setList(newLis);\n    }\n\n    const onCompleted =(id, completed) => {\n        const newLis =  list.map(item => item.id === id ? { ...item, completed: !completed }: item );\n        setList(newLis);\n    }\n\n    const [filter, setFilter] = useState(''); // SEARCH  'c'\n    const handleChangeFilter = (e)=> setFilter(e.target.value);\n    const visibleList = list.filter(item => item.name.includes(filter))  \n    \n\n    return(\n        <div style={{ width: 700, margin: '0 auto'}}> \n\n        <TextField fullWidth label=\"Search your note\" variant=\"outlined\" value={filter} onChange={handleChangeFilter}/>\n\n\n        <div style={{ paddingTop: 50 }} >\n                <Box component=\"form\">\n                    <TextField fullWidth label=\"Name of the note\" variant=\"outlined\" value={value} onChange={handleChange}/>\n                    <Button disabled={value.length < 1}  fullWidth variant=\"contained\" onClick={onSave}>Send</Button>\n                </Box>\n        </div>\n\n        {\n           visibleList && visibleList.map((item)=> <NoteItem \n             id={item.id}\n             key={item.id} \n             name={item.name} \n             completed={item.completed}\n             onCompleted={onCompleted}\n             onDelete={onDelete} \n             onUpdate={onUpdate} />\n             )\n        }\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}