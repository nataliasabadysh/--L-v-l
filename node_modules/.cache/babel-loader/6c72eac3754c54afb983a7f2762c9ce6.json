{"ast":null,"code":"import{useSelector}from\"react-redux\";import{getPosts,getLoadingPost}from\"../../redux/posts/selector\";import ClipLoader from\"react-spinners/ClipLoader\";import{PostItem}from\"../PostItem/PostItem\";import Grid from\"@mui/material/Grid\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var PostList=function PostList(){var posts=useSelector(function(globalStage){return getPosts(globalStage);});var isLoadingState=useSelector(function(globalStage){return getLoadingPost(globalStage);});var listJSX=!isLoadingState&&posts.length>1&&posts.map(function(item){return/*#__PURE__*/_jsx(Grid,{item:true,xs:2,sm:4,md:4,children:/*#__PURE__*/_jsx(PostItem,{name:item.body},item.id)},item.id);});var loaderJSX=isLoadingState&&posts.length<1&&/*#__PURE__*/_jsx(ClipLoader,{color:\"red\",size:150});return/*#__PURE__*/_jsxs(Grid,{container:true,spacing:{xs:2,md:3},columns:{xs:4,sm:8,md:12},children:[loaderJSX,listJSX]});};","map":{"version":3,"sources":["/Users/nataliasabadysh/Desktop/ReactLessons/lesson3/src/component/PostList/PostList.js"],"names":["useSelector","getPosts","getLoadingPost","ClipLoader","PostItem","Grid","PostList","posts","globalStage","isLoadingState","listJSX","length","map","item","body","id","loaderJSX","xs","md","sm"],"mappings":"AAAA,OAASA,WAAT,KAA4B,aAA5B,CACA,OAASC,QAAT,CAAmBC,cAAnB,KAAyC,4BAAzC,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,OAASC,QAAT,KAAyB,sBAAzB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,C,wFAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAC5B,GAAMC,CAAAA,KAAK,CAAGP,WAAW,CAAC,SAACQ,WAAD,QAAiBP,CAAAA,QAAQ,CAACO,WAAD,CAAzB,EAAD,CAAzB,CACA,GAAMC,CAAAA,cAAc,CAAGT,WAAW,CAAC,SAACQ,WAAD,QACjCN,CAAAA,cAAc,CAACM,WAAD,CADmB,EAAD,CAAlC,CAIA,GAAME,CAAAA,OAAO,CACX,CAACD,cAAD,EACAF,KAAK,CAACI,MAAN,CAAe,CADf,EAEAJ,KAAK,CAACK,GAAN,CAAU,SAACC,IAAD,qBACR,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,CAAkB,EAAE,CAAE,CAAtB,CAAyB,EAAE,CAAE,CAA7B,uBACE,KAAC,QAAD,EAAwB,IAAI,CAAEA,IAAI,CAACC,IAAnC,EAAeD,IAAI,CAACE,EAApB,CADF,EAAqCF,IAAI,CAACE,EAA1C,CADQ,EAAV,CAHF,CASA,GAAMC,CAAAA,SAAS,CAAGP,cAAc,EAAIF,KAAK,CAACI,MAAN,CAAe,CAAjC,eAChB,KAAC,UAAD,EAAY,KAAK,CAAE,KAAnB,CAA0B,IAAI,CAAE,GAAhC,EADF,CAIA,mBACE,MAAC,IAAD,EACE,SAAS,KADX,CAEE,OAAO,CAAE,CAAEM,EAAE,CAAE,CAAN,CAASC,EAAE,CAAE,CAAb,CAFX,CAGE,OAAO,CAAE,CAAED,EAAE,CAAE,CAAN,CAASE,EAAE,CAAE,CAAb,CAAgBD,EAAE,CAAE,EAApB,CAHX,WAKGF,SALH,CAMGN,OANH,GADF,CAUD,CA7BM","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { getPosts, getLoadingPost } from \"../../redux/posts/selector\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { PostItem } from \"../PostItem/PostItem\";\nimport Grid from \"@mui/material/Grid\";\n\nexport const PostList = () => {\n  const posts = useSelector((globalStage) => getPosts(globalStage));\n  const isLoadingState = useSelector((globalStage) =>\n    getLoadingPost(globalStage)\n  );\n\n  const listJSX =\n    !isLoadingState &&\n    posts.length > 1 &&\n    posts.map((item) => (\n      <Grid item xs={2} sm={4} md={4} key={item.id}>\n        <PostItem key={item.id} name={item.body} />\n      </Grid>\n    ));\n\n  const loaderJSX = isLoadingState && posts.length < 1 && (\n    <ClipLoader color={\"red\"} size={150} />\n  );\n\n  return (\n    <Grid\n      container\n      spacing={{ xs: 2, md: 3 }}\n      columns={{ xs: 4, sm: 8, md: 12 }}\n    >\n      {loaderJSX}\n      {listJSX}\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}