{"version":3,"sources":["pages/LogIn/LogIn.js"],"names":["validationSchema","yup","password","required","email","LogIn","dispatch","useDispatch","errorMessage","useSelector","state","auth","errorLogIn","history","useHistory","formik","useFormik","initialValues","onSubmit","values","a","push","routers","NEWS","path","logInUserAsync","variant","message","style","border","padding","margin","to","SINGUP","handleSubmit","fullWidth","id","name","label","type","value","onChange","handleChange","error","touched","Boolean","errors","helperText","color","disabled","isSubmitting","marginTop"],"mappings":"mPAeMA,EAAmBC,IAAW,CAClCC,SAAUD,IAAW,mBAAmBE,SAAS,oBACjDC,MAAOH,IACG,oBACPG,MAAM,uBACND,SAAS,uBA2ECE,UAxED,WACZ,IAAMC,EAAWC,cACXC,EAAeC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,cACjDC,EAAUC,cAEVC,EAASC,YAAU,CACvBC,cAAe,CACbb,MAAO,iBACPF,SAAU,YAEZF,iBAAkBA,EAClBkB,SAAS,WAAD,4BAAE,WAAOC,GAAP,SAAAC,EAAA,sDAEJZ,GACFK,EAAQQ,KAAKC,IAAQC,KAAKC,MAI5BlB,EAASmB,YAAeN,IAPhB,2CAAF,mDAAC,KAWX,OACE,gCACE,cAAC,IAAD,CAAYO,QAAQ,KAApB,qBAEClB,GAAgBA,EAAamB,SAC5B,sBAAKC,MAAO,CAAEC,OAAQ,gBAAiBC,QAAS,GAAIC,OAAQ,IAA5D,UACGvB,EAAamB,QACd,cAAC,IAAD,CAAMK,GAAIV,IAAQW,OAAOT,KAAzB,qCAIJ,uBAAMN,SAAUH,EAAOmB,aAAvB,UACE,cAAC,IAAD,CACEC,WAAS,EACTC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNC,KAAK,WACLC,MAAOzB,EAAOI,OAAOjB,SACrBuC,SAAU1B,EAAO2B,aACjBC,MAAO5B,EAAO6B,QAAQ1C,UAAY2C,QAAQ9B,EAAO+B,OAAO5C,UACxD6C,WAAYhC,EAAO6B,QAAQ1C,UAAYa,EAAO+B,OAAO5C,WAGvD,cAAC,IAAD,CACEiC,WAAS,EACTC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNE,MAAOzB,EAAOI,OAAOf,MACrBqC,SAAU1B,EAAO2B,aACjBC,MAAO5B,EAAO6B,QAAQxC,OAASyC,QAAQ9B,EAAO+B,OAAO1C,OACrD2C,WAAYhC,EAAO6B,QAAQxC,OAASW,EAAO+B,OAAO1C,QAGpD,cAAC,IAAD,CACE4C,MAAM,UACNC,SAAUlC,EAAOmC,aACjBxB,QAAQ,YACRS,WAAS,EACTI,KAAK,SACLX,MAAO,CAAEuB,UAAW,IANtB","file":"static/js/LogIn-Page.a1979153.chunk.js","sourcesContent":["// Core\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { routers } from \"../../utils/routes\";\n\n// Instruments\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { Typography } from \"@mui/material\";\nimport { logInUserAsync } from \"../../redux/auth/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst validationSchema = yup.object({\n  password: yup.string(\"Enter your name\").required(\"Name is required\"),\n  email: yup\n    .string(\"Enter your email\")\n    .email(\"Enter a valid email\")\n    .required(\"Email is required\"),\n});\n\nconst LogIn = () => {\n  const dispatch = useDispatch();\n  const errorMessage = useSelector((state) => state.auth.errorLogIn);\n  const history = useHistory();\n  \n  const formik = useFormik({\n    initialValues: {\n      email: \"nata@gmail.com\",\n      password: \"12345678\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values) => {\n\n      if(!errorMessage){\n        history.push(routers.NEWS.path)\n      }\n    \n\n      dispatch(logInUserAsync(values));\n    },\n  });\n\n  return (\n    <div>\n      <Typography variant=\"h3\"> Log in</Typography>\n\n      {errorMessage && errorMessage.message && (\n        <div style={{ border: \"1px solid red\", padding: 10, margin: 20 }}>\n          {errorMessage.message}\n          <Link to={routers.SINGUP.path}> Go to Sing Up page </Link>\n        </div>\n      )}\n\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n\n        <Button\n          color=\"primary\"\n          disabled={formik.isSubmitting}\n          variant=\"contained\"\n          fullWidth\n          type=\"submit\"\n          style={{ marginTop: 20 }}\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default LogIn;\n"],"sourceRoot":""}