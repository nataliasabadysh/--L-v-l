{"version":3,"sources":["redux/auth/type.js","utils/routes.js","redux/posts/types.js","redux/auth/reducer.js","redux/theme/types.js","init/rootReducer.js","redux/posts/reducer.js","redux/theme/reducer.js","init/middleware.js","init/store.js","theme/styles.js","component/Navigation/styles.js","component/Navigation/index.js","redux/theme/action.js","redux/posts/actions.js","component/PostItem/PostItem.js","component/PostList/PostList.js","redux/posts/selector.js","component/PostContainer/PostContainer.js","pages/NewsPage/styles.js","pages/NewsPage/NewsPage.js","utils/PrivetRouters.js","App.js","index.js","api/auth.js","redux/auth/actions.js","component/Navigation/styles.module.css"],"names":["types","LOG_IN","SIGN_UP","LOG_OUT","LOG_IN_ERROR","SIGN_UP_ERROR","USER_REQUEST","USER_SUCCESS","routers","HOME","path","DASHBOARD","PROFILE","LOGIN","SINGUP","NEWS","FILL_POST","STOP_LOADING","START_LOADING","SET_ERROR","initState","token","user","name","email","isLogging","errorLogIn","errorSignUp","isAuthenticated","postRootReducer","combineReducers","list","state","type","payload","isLoading","error","rootReducer","theme","posts","auth","actions","composeEnhancers","createLogger","duration","collapsed","colors","title","action","prevState","nextState","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","applyMiddleware","containerStyle","display","flexDirection","justifyContent","alignItems","minHeight","fontSize","color","NavStyled","styled","nav","UserStyles","div","UserNameStyles","p","label","inputProps","Navigation","useSelector","userName","dispatch","useDispatch","history","useHistory","userJSX","role","aria-label","Button","variant","onClick","localStorage","removeItem","logOutUserAsync","push","themeJSX","Switch","onChange","event","value","target","checked","exact","to","className","styles","linkStyle","activeStyle","startLoading","stopLoading","fetchPost","params","fetch","then","response","json","data","fillPostSync","catch","finally","PostItem","Paper","style","textTransform","padding","PostList","globalStage","isLoadingState","listJSX","length","map","item","Grid","xs","sm","md","body","id","loaderJSX","size","container","spacing","columns","PostContainer","useEffect","ContainerStyled","props","NewsPage","PrivetRouter","redirectTO","Component","component","routeProps","render","DashboardAsync","lazy","LogInAsync","SignUpAsync","App","ls","JSON","parse","getItem","singUpUser","singUpUserSuccess","document","fallback","redirectTo","getElementById","users","SECRET","signIn","password","Promise","resolve","reject","find","setTimeout","tokenContent","jwt_token","jwt","encode","permissions","message","createUser","credentials","newUser","signOut","singUpUserRequest","logOutUser","createUserAsync","setItem","stringify","logInUserAsync","logInUserResponse","module","exports"],"mappings":"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","file":"static/js/main.d1e2d205.chunk.js","sourcesContent":["export const types = {\n  LOG_IN: \"auth/LOG_IN\",\n  SIGN_UP: \"auth/SIGN_UP\",\n  LOG_OUT: \"auth/LOG_OUT\",\n\n  LOG_IN_ERROR: \"auth/LOG_IN_ERROR\",\n  SIGN_UP_ERROR: \"auth/SIGN_UP_ERROR\",\n\n  USER_REQUEST: \"USER_REQUEST\",\n  USER_SUCCESS: \"USER_SUCCESS\",\n};\n","export const routers = {\n  HOME: {\n    path: \"/\",\n  },\n  DASHBOARD: {\n    path: \"/dashboard\",\n  },\n  PROFILE: {\n    path: \"/profile\",\n  },\n  LOGIN: {\n    path: \"/login\",\n  },\n  SINGUP: {\n    path: \"/singup\",\n  },\n  NEWS: {\n    path: \"/news\",\n  },\n};\n","export const FILL_POST = \"FILL_POST\";\n\nexport const STOP_LOADING = \"STOP_LOADING\";\nexport const START_LOADING = \"START_LOADING\";\n\nexport const SET_ERROR = \"SET_ERROR\";\n","import { types } from \"./type\";\n\nconst initState = {\n  token: null,\n  user: {\n    name: \"\",\n    email: \"\",\n  },\n  isLogging: false,\n  errorLogIn: null,\n  errorSignUp: null,\n  isAuthenticated: false,\n};\n\nexport const authReducer = (state = initState, actions) => {\n  switch (actions.type) {\n    case types.SIGN_UP: {\n      return {\n        ...state,\n        errorSignUp: null,\n        errorLogIn: null,\n        token: actions.payload.token,\n        user: actions.payload.user,\n      };\n    }\n\n    case types.LOG_IN: {\n      return {\n        ...state,\n        errorSignUp: null,\n        errorLogIn: null,\n        token: actions.payload.token,\n        user: actions.payload.user,\n      };\n    }\n\n    case types.USER_SUCCESS: {\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    }\n\n    case types.LOG_OUT: {\n      return {\n        ...initState,\n      };\n    }\n\n    case types.SIGN_UP_ERROR: {\n      return {\n        ...initState,\n        errorSignUp: actions.payload,\n      };\n    }\n\n    case types.LOG_IN_ERROR: {\n      return {\n        ...initState,\n        errorLogIn: actions.payload,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","export const types = {\n  CHANGE_THEME: \"CHANGE_THEME\",\n};\n","// Core\nimport { combineReducers } from \"redux\";\nimport {\n  postsReducer,\n  loadingReducer,\n  errorReducer,\n} from \"../redux/posts/reducer\";\nimport { authReducer } from \"../redux/auth/reducer\";\nimport { themeReducer } from \"../redux/theme/reducer\";\n\nconst postRootReducer = combineReducers({\n  list: postsReducer,\n  isLoading: loadingReducer,\n  error: errorReducer,\n});\n// Reducers\nexport const rootReducer = combineReducers({\n  theme: themeReducer,\n  posts: postRootReducer,\n  auth: authReducer,\n});\n","import { FILL_POST, START_LOADING, STOP_LOADING, SET_ERROR } from \"./types\";\n\nexport const postsReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case FILL_POST: {\n      return payload;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const loadingReducer = (state = false, { type }) => {\n  switch (type) {\n    case START_LOADING: {\n      return true;\n    }\n    case STOP_LOADING: {\n      return false;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const errorReducer = (state = null, { type, payload }) => {\n  switch (type) {\n    case SET_ERROR: {\n      return payload;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { types } from \"./types\";\n\nexport const themeReducer = (state = false, { type, payload }) => {\n  switch (type) {\n    case types.CHANGE_THEME: {\n      return payload;\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","// Core\nimport { compose } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nexport const logger = createLogger({\n  duration: true,\n  collapsed: true,\n  colors: {\n    title: (action) => {\n      return action.error ? \"firebrick\" : \"deepskyblue\";\n    },\n    prevState: () => \"#1C5FAF\",\n    action: () => \"#149945\",\n    nextState: () => \"#A47104\",\n    error: () => \"#ff0005\",\n  },\n});\n\nconst developmentEnvironment = process.env.NODE_ENV === \"development\";\n\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\nconst composeEnhancers =\n  developmentEnvironment && devtools ? devtools : compose;\n\nconst middleware = [thunk];\n\nif (developmentEnvironment) {\n  middleware.push(logger);\n}\n\nexport { composeEnhancers, middleware };\n","// Core\nimport { createStore, applyMiddleware } from \"redux\";\n\n// Instruments\nimport { rootReducer } from \"./rootReducer\";\nimport { composeEnhancers, middleware } from \"./middleware\";\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n","export const containerStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  minHeight: \"100vh\",\n  fontSize: 26,\n  color: \"blue\",\n};\n","import styled from \"styled-components\";\n\nexport const NavStyled = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  margin-left: 30;\n  margin-right: 30;\n`;\n\nexport const UserStyles = styled.div`\n  max-width: 150;\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const UserNameStyles = styled.p`\n  padding-right: 30px;\n  align-content: center;\n`;\n","import { NavLink, useHistory } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button } from \"@mui/material\";\n\nimport { routers } from \"../../utils/routes\";\nimport { NavStyled, UserStyles, UserNameStyles } from \"./styles\";\nimport Switch from \"@mui/material/Switch\";\nimport { logOutUserAsync } from \"../../redux/auth/actions\";\nimport { changeTheme } from \"../../redux/theme/action\";\n\nconst label = { inputProps: { \"aria-label\": \"Switch demo\" } };\n\nexport const Navigation = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const userName = useSelector((state) => state.auth.user.name);\n\n  const dispatch = useDispatch();\n  const history = useHistory()\n\n  const onLogOut = () => {\n    localStorage.removeItem(\"auth\");\n    dispatch(logOutUserAsync());\n    history.push(routers.LOGIN.path)\n  };\n\n  const userJSX = isAuthenticated && (\n    <UserStyles>\n      <UserNameStyles>\n        <span role=\"img\" aria-label=\"face emoji\">\n          🤓\n        </span>\n        {userName}\n      </UserNameStyles>\n      <Button variant=\"text\" onClick={onLogOut}>\n        Log Out\n      </Button>\n    </UserStyles>\n  );\n\n  const themeJSX = isAuthenticated && (\n    <div>\n      Theme\n      <Switch\n        onChange={(event) => dispatch(changeTheme(event.target.checked))}\n        {...label}\n      />\n    </div>\n  );\n\n  return (\n    <NavStyled>\n      <div>\n        {isAuthenticated ? (\n          <>\n            <NavLink\n              exact\n              to={routers.NEWS.path}\n              className={styles.linkStyle}\n              activeStyle={{ color: \"red\" }}\n            >\n              News\n            </NavLink>\n\n            <NavLink\n              to={routers.DASHBOARD.path}\n              className={styles.linkStyle}\n              activeStyle={{ color: \"red\" }}\n            >\n              Dashboard\n            </NavLink>\n          </>\n        ) : (\n          <>\n            <NavLink\n              to={routers.LOGIN.path}\n              className={styles.linkStyle}\n              activeStyle={{ color: \"red\" }}\n            >\n              Log in\n            </NavLink>\n            <NavLink\n              to={routers.SINGUP.path}\n              className={styles.linkStyle}\n              activeStyle={{ color: \"red\" }}\n            >\n              Sing Up\n            </NavLink>\n          </>\n        )}\n      </div>\n      <div>{themeJSX}</div>\n\n      {userJSX}\n    </NavStyled>\n  );\n};\n","import { types } from \"./types\";\n\nexport const changeTheme = (value) => ({\n  type: types.CHANGE_THEME,\n  payload: value,\n});\n","import { FILL_POST, START_LOADING, STOP_LOADING, SET_ERROR } from \"./types\";\n\nimport { signIn, createUser, signOut } from \"../../api/auth\";\n\n// Sync\nexport const fillPostSync = (data) => {\n  return {\n    type: FILL_POST,\n    payload: data,\n  };\n};\n\nexport const startLoading = {\n  type: START_LOADING,\n};\n\nexport const stopLoading = {\n  type: STOP_LOADING,\n};\n\nexport const setErrorMessage = (msg) => ({\n  type: SET_ERROR,\n  payload: msg,\n});\n\n// Async\nexport const fetchPost = (params) => (dispatch) => {\n  dispatch(startLoading);\n  fetch(\"https://jsonplaceholder.typicode.com/posts\")\n    .then((response) => response.json())\n    .then((data) => dispatch(fillPostSync(data)))\n    .catch((error) => setErrorMessage(error))\n    .finally(() => dispatch(stopLoading));\n};\n\nconst credentials = {\n  name: \"Jecskф\",\n  email: \"jectsф@gmail.com\",\n  password: \"jecфt#s$$\",\n  permissions: \"custom\",\n};\n\nexport const signUserInAsync = () => (dispatch) => {\n  signIn({ email: \"jectsф@gmail.com\", password: \"jecфt#s$$\" })\n    .then((response) => {\n      console.log(\"response\", response);\n    })\n    .catch((error) => console.log(\"error\", error));\n};\n\nexport const createUserAsync = () => (dispatch) => {\n  createUser(credentials)\n    .then((response) => {\n      console.log(\"response\", response);\n    })\n    .catch((error) => console.log(\"error\", error));\n};\n\nexport const signUserOut = () => (dispatch) => {\n  return signOut().then(() => {\n    console.log(\"delete from LS\");\n  });\n};\n","import Paper from \"@mui/material/Paper\";\n\nexport const PostItem = ({ name }) => (\n  <Paper style={{ textTransform: \"capitalize\", padding: 10 }}>{name}</Paper>\n);\n","import { useSelector } from \"react-redux\";\nimport { getPosts, getLoadingPost } from \"../../redux/posts/selector\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { PostItem } from \"../PostItem/PostItem\";\nimport Grid from \"@mui/material/Grid\";\n\nexport const PostList = () => {\n  const posts = useSelector((globalStage) => getPosts(globalStage));\n  const isLoadingState = useSelector((globalStage) =>\n    getLoadingPost(globalStage)\n  );\n\n  const listJSX =\n    !isLoadingState &&\n    posts.length > 1 &&\n    posts.map((item) => (\n      <Grid item xs={2} sm={4} md={4} key={item.id}>\n        <PostItem key={item.id} name={item.body} />\n      </Grid>\n    ));\n\n  const loaderJSX = isLoadingState && posts.length < 1 && (\n    <ClipLoader color={\"red\"} size={150} />\n  );\n\n  return (\n    <Grid\n      container\n      spacing={{ xs: 2, md: 3 }}\n      columns={{ xs: 4, sm: 8, md: 12 }}\n    >\n      {loaderJSX}\n      {listJSX}\n    </Grid>\n  );\n};\n","export const getPosts = (state) => state.posts.list;\nexport const getLoadingPost = (state) => state.posts.isLoading;\nexport const getErrorPost = (state) => state.posts.error;\n","// Core\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchPost } from \"../../redux/posts/actions\";\nimport { PostList } from \"../PostList/PostList\";\n\nexport function PostContainer() {\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.list);\n\n  useEffect(() => {\n    if(posts.length === 0){\n      dispatch(fetchPost())\n    }\n  }, [dispatch]);\n\n  return (\n    <div>\n      <PostList />\n    </div>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const ContainerStyled = styled.nav`\n  padding: 20px;\n  background-color: ${(props) => (props.theme === true ? \"#fff\" : \"#cbcbcb\")};\n`;\n","import { PostContainer } from \"../../component/PostContainer/PostContainer\";\nimport { ContainerStyled } from \"./styles\";\nimport { useSelector } from \"react-redux\";\n\nexport const NewsPage = () => {\n  const theme = useSelector((state) => state.theme);\n\n  return (\n    <ContainerStyled theme={theme}>\n      <PostContainer />\n    </ContainerStyled>\n  );\n};\n","import { Route, Redirect } from \"react-router-dom\";\n\nexport const PrivetRouter = ({\n  isAuthenticated,\n  redirectTO=\"/news\",\n  component: Component,\n  ...routeProps\n}) => {\n  return (\n    <Route\n      {...routeProps}\n      exact\n      render={(props) =>\n        isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={redirectTO} />\n        )\n      }\n    />\n  );\n};\n","// Core\nimport { containerStyle } from \"./theme/styles\";\nimport { useEffect, lazy, Suspense } from \"react\";\n\n// import { LogIn } from \"./pages/LogIn/LogIn\";\n// import { SignUp } from \"./pages/SignUp/SignUpPage\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport { Navigation } from \"./component/Navigation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { singUpUser, singUpUserSuccess } from \"./redux/auth/actions\";\nimport { NewsPage } from \"./pages/NewsPage/NewsPage\";\nimport { routers } from \"./utils/routes\";\nimport { PrivetRouter } from \"./utils/PrivetRouters\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst DashboardAsync = lazy(() =>\n  import(/* webpackChunkName: \"Dashboard-Page\" */ \"./pages/Dashboard/Dashboard\")\n);\nconst LogInAsync = lazy(() =>\n  import(/* webpackChunkName: \"LogIn-Page\" */ \"./pages/LogIn/LogIn\")\n);\nconst SignUpAsync = lazy(() =>\n  import(/* webpackChunkName: \"SignUp-Page\" */ \"./pages/SignUp/SignUpPage\")\n);\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const ls = JSON.parse(localStorage.getItem(\"auth\"));\n    \n    if (ls) {\n      dispatch(singUpUser(ls));\n      dispatch(singUpUserSuccess);\n      history.push(routers.NEWS.path)\n    }\n\n    document.title = \"MOVIE STAR\";\n  }, [dispatch]);\n\n  return (\n    <>\n      <Navigation />\n\n      <div style={containerStyle}>\n        <Switch>\n          <Suspense fallback={<ClipLoader color={\"red\"} size={150} />}>\n            {!isAuthenticated && (\n              <Route path={routers.SINGUP.path} component={SignUpAsync} />\n            )}\n            {!isAuthenticated && <Route path={routers.LOGIN.path} component={LogInAsync} />}\n\n            <PrivetRouter\n              isAuthenticated={isAuthenticated}\n              path={routers.NEWS.path}\n              component={NewsPage}\n              redirectTo={routers.LOGIN.path}\n            />\n            <PrivetRouter\n              isAuthenticated={isAuthenticated}\n              path={routers.DASHBOARD.path}\n              component={DashboardAsync}\n              redirectTo={routers.LOGIN.path}\n            />\n          </Suspense>\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// Core\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n// Instruments\nimport { store } from \"./init/store\";\n\n// Pages\nimport App from \"./App\";\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import jwt from \"jwt-simple\";\n\nconst users = [];\n\nconst SECRET = \"react_is_amazing\";\n\nexport const signIn = ({ email, password }) =>\n  new Promise((resolve, reject) => {\n    const user = users.find((user) => user.email === email);\n\n    setTimeout(() => {\n      if (!user) {\n        reject({ message: \"User does not exist!\" });\n        return;\n      }\n\n      if (user.password !== password) {\n        reject({ message: \"Invalid password!\" });\n        return;\n      }\n\n      const tokenContent = { name: user.name, email: user.email };\n\n      user.jwt_token = jwt.encode(tokenContent, SECRET);\n\n      resolve({\n        user: {\n          name: user.name,\n          email: user.email,\n          permissions: \"admin\",\n        },\n        token: user.jwt_token,\n      });\n    }, 300);\n  });\n\nexport const createUser = (credentials) =>\n  new Promise((resolve, reject) => {\n    const user = users.find((user) => user.email === credentials.email);\n\n    setTimeout(() => {\n      if (user) reject({ message: \"User already exists!\" });\n\n      const tokenContent = {\n        name: credentials.name,\n        email: credentials.email,\n        role: \"admin\",\n      };\n\n      const newUser = {\n        ...credentials,\n        jwt_token: jwt.encode(tokenContent, SECRET),\n      };\n\n      users.push(newUser);\n\n      resolve({\n        user: {\n          name: newUser.name,\n          email: newUser.email,\n          permissions: \"admin\",\n        },\n        token: newUser.jwt_token,\n      });\n    }, 300);\n  });\n\nexport const signOut = () =>\n  new Promise((resolve) => {\n    return setTimeout(() => resolve(), 300);\n  });\n","import { createUser, signIn, signOut } from \"../../api/auth\";\nimport { types } from \"./type\";\n\n// SYNC\nconst singUpUserRequest = {\n  type: types.USER_REQUEST,\n};\n\nexport const singUpUserSuccess = {\n  type: types.USER_SUCCESS,\n};\n\nexport const logOutUser = {\n  type: types.LOG_OUT,\n};\n\nexport const singUpUser = (user) => ({\n  type: types.SIGN_UP,\n  payload: user,\n});\n\nconst logInUserResponse = (response) => ({\n  type: types.LOG_IN,\n  payload: response,\n});\n\nconst singUpUserError = (message) => ({\n  type: types.SIGN_UP_ERROR,\n  payload: message,\n});\n\nconst logInUserError = (message) => ({\n  type: types.LOG_IN_ERROR,\n  payload: message,\n});\n\n// ASYNC  - fun (side effect)\nexport const createUserAsync = (credentials) => (dispatch) => {\n  dispatch(singUpUserRequest);\n  createUser(credentials)\n    .then((response) => {\n      dispatch(singUpUser(response));\n      dispatch(singUpUserSuccess);\n\n      localStorage.setItem(\"auth\", JSON.stringify(response));\n    })\n    .catch((error) => dispatch(singUpUserError(error)));\n\n  // fetch('https:/uperSite.api/singup').then()\n};\n\nexport const logInUserAsync = (credentials) => (dispatch) => {\n  dispatch(singUpUserRequest);\n\n  signIn(credentials)\n    .then((response) => {\n      dispatch(logInUserResponse(response));\n      dispatch(singUpUserSuccess);\n      localStorage.setItem(\"auth\", JSON.stringify(response));\n    })\n    .catch((error) => dispatch(logInUserError(error)));\n\n  // fetch('https:/uperSite.api/singup').then()\n};\n\nexport const logOutUserAsync = () => (dispatch) => {\n  signOut();\n  dispatch(logOutUser);\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkStyle\":\"styles_linkStyle__cHuml\",\"activeLink\":\"styles_activeLink__32nd7\"};"],"sourceRoot":""}