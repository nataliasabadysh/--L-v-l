{"version":3,"sources":["pages/SignUp/SignUpPage.js"],"names":["validationSchema","yup","name","required","email","password","min","SignUp","dispatch","useDispatch","errorMessage","useSelector","state","auth","errorSignUp","onSave","values","createUserAsync","history","push","routers","NEWS","path","useHistory","formik","useFormik","initialValues","onSubmit","a","variant","message","style","border","padding","margin","to","LOGIN","handleSubmit","fullWidth","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","color","disabled","isSubmitting","marginTop"],"mappings":"mPAeMA,EAAmBC,IAAW,CAClCC,KAAMD,IAAW,mBAAmBE,SAAS,oBAC7CC,MAAOH,IACG,oBACPG,MAAM,uBACND,SAAS,qBACZE,SAAUJ,IACA,uBACPK,IAAI,EAAG,qDACPH,SAAS,0BA2FCI,UAxFA,WACb,IAAMC,EAAWC,cACXC,EAAeC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,eAEjDC,EAAS,SAACC,GACdR,EAASS,YAAgBD,IAErBN,GACFQ,EAAQC,KAAKC,IAAQC,KAAKC,OAIxBJ,EAAUK,cAEVC,EAASC,YAAU,CACvBC,cAAe,CACbtB,MAAO,iBACPF,KAAM,UACNG,SAAU,YAEZL,iBAAkBA,EAClB2B,SAAS,WAAD,4BAAE,WAAOX,GAAP,SAAAY,EAAA,sDACRb,EAAOC,GADC,2CAAF,mDAAC,KAKX,OACE,gCACE,cAAC,IAAD,CAAYa,QAAQ,KAApB,sBAECnB,GAAgBA,EAAaoB,SAC5B,sBAAKC,MAAO,CAAEC,OAAQ,gBAAiBC,QAAS,GAAIC,OAAQ,IAA5D,UACG,IACAxB,EAAaoB,QACd,cAAC,IAAD,CAAMK,GAAIf,IAAQgB,MAAMd,KAAxB,mCAIJ,uBAAMK,SAAUH,EAAOa,aAAvB,UACE,cAAC,IAAD,CACEC,WAAS,EACTC,GAAG,OACHrC,KAAK,OACLsC,MAAM,OACNC,MAAOjB,EAAOR,OAAOd,KACrBwC,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOqB,QAAQ3C,MAAQ4C,QAAQtB,EAAOuB,OAAO7C,MACpD8C,WAAYxB,EAAOqB,QAAQ3C,MAAQsB,EAAOuB,OAAO7C,OAGnD,cAAC,IAAD,CACEoC,WAAS,EACTC,GAAG,QACHrC,KAAK,QACLsC,MAAM,QACNC,MAAOjB,EAAOR,OAAOZ,MACrBsC,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOqB,QAAQzC,OAAS0C,QAAQtB,EAAOuB,OAAO3C,OACrD4C,WAAYxB,EAAOqB,QAAQzC,OAASoB,EAAOuB,OAAO3C,QAGpD,cAAC,IAAD,CACEkC,WAAS,EACTC,GAAG,WACHrC,KAAK,WACLsC,MAAM,WACNS,KAAK,WACLR,MAAOjB,EAAOR,OAAOX,SACrBqC,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOqB,QAAQxC,UAAYyC,QAAQtB,EAAOuB,OAAO1C,UACxD2C,WAAYxB,EAAOqB,QAAQxC,UAAYmB,EAAOuB,OAAO1C,WAGvD,cAAC,IAAD,CACE6C,MAAM,UACNC,SAAU3B,EAAO4B,aACjBvB,QAAQ,YACRS,WAAS,EACTW,KAAK,SACLlB,MAAO,CAAEsB,UAAW,IANtB","file":"static/js/SignUp-Page.05a96698.chunk.js","sourcesContent":["// Core\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { routers } from \"../../utils/routes\";\n\n// Instruments\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { Typography } from \"@mui/material\";\nimport { createUserAsync } from \"../../redux/auth/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst validationSchema = yup.object({\n  name: yup.string(\"Enter your name\").required(\"Name is required\"),\n  email: yup\n    .string(\"Enter your email\")\n    .email(\"Enter a valid email\")\n    .required(\"Email is required\"),\n  password: yup\n    .string(\"Enter your password\")\n    .min(8, \"Password should be of minimum 8 characters length\")\n    .required(\"Password is required\"),\n});\n\nconst SignUp = () => {\n  const dispatch = useDispatch();\n  const errorMessage = useSelector((state) => state.auth.errorSignUp);\n\n  const onSave = (values) => {\n    dispatch(createUserAsync(values));\n\n    if(!errorMessage){\n      history.push(routers.NEWS.path)\n    }\n  }\n\n  const history = useHistory();\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"nata@gmail.com\",\n      name: \"Natasha\",\n      password: \"12345678\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values) => {\n      onSave(values)\n    },\n  });\n\n  return (\n    <div>\n      <Typography variant=\"h3\"> Sign up</Typography>\n\n      {errorMessage && errorMessage.message && (\n        <div style={{ border: \"1px solid red\", padding: 10, margin: 20 }}>\n          {\" \"}\n          {errorMessage.message}\n          <Link to={routers.LOGIN.path}> Go to LogIn page </Link>\n        </div>\n      )}\n\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"name\"\n          name=\"name\"\n          label=\"Name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n\n        <Button\n          color=\"primary\"\n          disabled={formik.isSubmitting}\n          variant=\"contained\"\n          fullWidth\n          type=\"submit\"\n          style={{ marginTop: 20 }}\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n"],"sourceRoot":""}